# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type User {
  id: ID!
  fullName: String
  email: String
  password: PasswordState
  phone: String
  address: String
  createdAt: DateTime
  updatedAt: DateTime
}

type PasswordState {
  isSet: Boolean!
}

scalar DateTime @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

input UserWhereUniqueInput {
  id: ID
  email: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IDFilter
  fullName: StringFilter
  email: StringFilter
  phone: StringFilter
  address: StringFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeNullableFilter
}

input UserOrderByInput {
  id: OrderDirection
  fullName: OrderDirection
  email: OrderDirection
  phone: OrderDirection
  address: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input UserUpdateInput {
  fullName: String
  email: String
  password: String
  phone: String
  address: String
  createdAt: DateTime
  updatedAt: DateTime
}

input UserUpdateArgs {
  where: UserWhereUniqueInput!
  data: UserUpdateInput!
}

input UserCreateInput {
  fullName: String
  email: String
  password: String
  phone: String
  address: String
  createdAt: DateTime
  updatedAt: DateTime
}

type Agency {
  id: ID!
  agencyFullName: String
  agencyAvatar: ImageFieldOutput
  agencyPhoneNumber: String
  agencyAddress: String
  agencyTaxNumber: String
  agencyCompanyType: AgencyAgencyCompanyTypeType
  cars(where: CarWhereInput! = {}, orderBy: [CarOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CarWhereUniqueInput): [Car!]
  carsCount(where: CarWhereInput! = {}): Int
  createdAt: DateTime
  updatedAt: DateTime
}

type ImageFieldOutput {
  id: ID!
  filesize: Int!
  width: Int!
  height: Int!
  extension: ImageExtension!
  url: String!
}

enum ImageExtension {
  jpg
  png
  webp
  gif
}

enum AgencyAgencyCompanyTypeType {
  SARL
  SUARL
  SA
  Other
}

input AgencyWhereUniqueInput {
  id: ID
}

input AgencyWhereInput {
  AND: [AgencyWhereInput!]
  OR: [AgencyWhereInput!]
  NOT: [AgencyWhereInput!]
  id: IDFilter
  agencyFullName: StringFilter
  agencyPhoneNumber: StringFilter
  agencyAddress: StringFilter
  agencyTaxNumber: StringFilter
  agencyCompanyType: AgencyAgencyCompanyTypeTypeNullableFilter
  cars: CarManyRelationFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
}

input AgencyAgencyCompanyTypeTypeNullableFilter {
  equals: AgencyAgencyCompanyTypeType
  in: [AgencyAgencyCompanyTypeType!]
  notIn: [AgencyAgencyCompanyTypeType!]
  not: AgencyAgencyCompanyTypeTypeNullableFilter
}

input CarManyRelationFilter {
  every: CarWhereInput
  some: CarWhereInput
  none: CarWhereInput
}

input AgencyOrderByInput {
  id: OrderDirection
  agencyFullName: OrderDirection
  agencyPhoneNumber: OrderDirection
  agencyAddress: OrderDirection
  agencyTaxNumber: OrderDirection
  agencyCompanyType: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input AgencyUpdateInput {
  agencyFullName: String
  agencyAvatar: ImageFieldInput
  agencyPhoneNumber: String
  agencyAddress: String
  agencyTaxNumber: String
  agencyCompanyType: AgencyAgencyCompanyTypeType
  cars: CarRelateToManyForUpdateInput
  createdAt: DateTime
  updatedAt: DateTime
}

input ImageFieldInput {
  upload: Upload!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CarRelateToManyForUpdateInput {
  disconnect: [CarWhereUniqueInput!]
  set: [CarWhereUniqueInput!]
  create: [CarCreateInput!]
  connect: [CarWhereUniqueInput!]
}

input AgencyUpdateArgs {
  where: AgencyWhereUniqueInput!
  data: AgencyUpdateInput!
}

input AgencyCreateInput {
  agencyFullName: String
  agencyAvatar: ImageFieldInput
  agencyPhoneNumber: String
  agencyAddress: String
  agencyTaxNumber: String
  agencyCompanyType: AgencyAgencyCompanyTypeType
  cars: CarRelateToManyForCreateInput
  createdAt: DateTime
  updatedAt: DateTime
}

input CarRelateToManyForCreateInput {
  create: [CarCreateInput!]
  connect: [CarWhereUniqueInput!]
}

type Car {
  id: ID!
  name: String
  model: String
  year: Int
  price: Int
  color: String
  bodyType: String
  engineType: String
  horsepower: Int
  torque: Int
  topSpeed: Int
  acceleration: String
  transmission: String
  drivetrain: String
  fuelCapacity: Float
  fuelEconomyCity: Float
  fuelEconomyHighway: Float
  fuelEconomyCombined: Float
  emissionsRating: String
  airbags: Int
  abs: Boolean
  tractionControl: Boolean
  laneAssist: Boolean
  adaptiveCruiseControl: Boolean
  blindSpotMonitor: Boolean
  rearViewCamera: Boolean
  parkingSensors: Boolean
  autonomousDrivingLevel: String
  seats: Int
  seatMaterial: String
  heatedSeats: Boolean
  ventilatedSeats: Boolean
  sunroof: Boolean
  climateControl: String
  infotainmentSystem: String
  touchscreenSize: Float
  wirelessCharging: Boolean
  appleCarPlay: Boolean
  androidAuto: Boolean
  wheels: String
  wheelSize: Float
  ledHeadlights: Boolean
  fogLights: Boolean
  tintedWindows: Boolean
  cargoCapacity: Float
  towingCapacity: Float
  roofRack: Boolean
  trailerHitch: Boolean
  bluetooth: Boolean
  wifiHotspot: Boolean
  usbPorts: Int
  speakerSystem: String
  agency(where: AgencyWhereInput! = {}, orderBy: [AgencyOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AgencyWhereUniqueInput): [Agency!]
  agencyCount(where: AgencyWhereInput! = {}): Int
  status: String
  listedDate: DateTime
  warrantyYears: Int
  images: ImageFieldOutput
  videoURL: String
  insuranceStatus: String
  registrationValidUntil: DateTime
}

input CarWhereUniqueInput {
  id: ID
}

input CarWhereInput {
  AND: [CarWhereInput!]
  OR: [CarWhereInput!]
  NOT: [CarWhereInput!]
  id: IDFilter
  name: StringFilter
  model: StringFilter
  year: IntFilter
  price: IntFilter
  color: StringNullableFilter
  bodyType: StringNullableFilter
  engineType: StringNullableFilter
  horsepower: IntNullableFilter
  torque: IntNullableFilter
  topSpeed: IntNullableFilter
  acceleration: StringFilter
  transmission: StringNullableFilter
  drivetrain: StringNullableFilter
  fuelCapacity: FloatNullableFilter
  fuelEconomyCity: FloatNullableFilter
  fuelEconomyHighway: FloatNullableFilter
  fuelEconomyCombined: FloatNullableFilter
  emissionsRating: StringFilter
  airbags: IntNullableFilter
  abs: BooleanFilter
  tractionControl: BooleanFilter
  laneAssist: BooleanFilter
  adaptiveCruiseControl: BooleanFilter
  blindSpotMonitor: BooleanFilter
  rearViewCamera: BooleanFilter
  parkingSensors: BooleanFilter
  autonomousDrivingLevel: StringNullableFilter
  seats: IntNullableFilter
  seatMaterial: StringNullableFilter
  heatedSeats: BooleanFilter
  ventilatedSeats: BooleanFilter
  sunroof: BooleanFilter
  climateControl: StringNullableFilter
  infotainmentSystem: StringFilter
  touchscreenSize: FloatNullableFilter
  wirelessCharging: BooleanFilter
  appleCarPlay: BooleanFilter
  androidAuto: BooleanFilter
  wheels: StringNullableFilter
  wheelSize: FloatNullableFilter
  ledHeadlights: BooleanFilter
  fogLights: BooleanFilter
  tintedWindows: BooleanFilter
  cargoCapacity: FloatNullableFilter
  towingCapacity: FloatNullableFilter
  roofRack: BooleanFilter
  trailerHitch: BooleanFilter
  bluetooth: BooleanFilter
  wifiHotspot: BooleanFilter
  usbPorts: IntNullableFilter
  speakerSystem: StringFilter
  agency: AgencyManyRelationFilter
  status: StringNullableFilter
  listedDate: DateTimeNullableFilter
  warrantyYears: IntNullableFilter
  videoURL: StringFilter
  insuranceStatus: StringNullableFilter
  registrationValidUntil: DateTimeNullableFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: StringNullableFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntNullableFilter
}

input FloatNullableFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: FloatNullableFilter
}

input BooleanFilter {
  equals: Boolean
  not: BooleanFilter
}

input AgencyManyRelationFilter {
  every: AgencyWhereInput
  some: AgencyWhereInput
  none: AgencyWhereInput
}

input CarOrderByInput {
  id: OrderDirection
  name: OrderDirection
  model: OrderDirection
  year: OrderDirection
  price: OrderDirection
  color: OrderDirection
  bodyType: OrderDirection
  engineType: OrderDirection
  horsepower: OrderDirection
  torque: OrderDirection
  topSpeed: OrderDirection
  acceleration: OrderDirection
  transmission: OrderDirection
  drivetrain: OrderDirection
  fuelCapacity: OrderDirection
  fuelEconomyCity: OrderDirection
  fuelEconomyHighway: OrderDirection
  fuelEconomyCombined: OrderDirection
  emissionsRating: OrderDirection
  airbags: OrderDirection
  abs: OrderDirection
  tractionControl: OrderDirection
  laneAssist: OrderDirection
  adaptiveCruiseControl: OrderDirection
  blindSpotMonitor: OrderDirection
  rearViewCamera: OrderDirection
  parkingSensors: OrderDirection
  autonomousDrivingLevel: OrderDirection
  seats: OrderDirection
  seatMaterial: OrderDirection
  heatedSeats: OrderDirection
  ventilatedSeats: OrderDirection
  sunroof: OrderDirection
  climateControl: OrderDirection
  infotainmentSystem: OrderDirection
  touchscreenSize: OrderDirection
  wirelessCharging: OrderDirection
  appleCarPlay: OrderDirection
  androidAuto: OrderDirection
  wheels: OrderDirection
  wheelSize: OrderDirection
  ledHeadlights: OrderDirection
  fogLights: OrderDirection
  tintedWindows: OrderDirection
  cargoCapacity: OrderDirection
  towingCapacity: OrderDirection
  roofRack: OrderDirection
  trailerHitch: OrderDirection
  bluetooth: OrderDirection
  wifiHotspot: OrderDirection
  usbPorts: OrderDirection
  speakerSystem: OrderDirection
  status: OrderDirection
  listedDate: OrderDirection
  warrantyYears: OrderDirection
  videoURL: OrderDirection
  insuranceStatus: OrderDirection
  registrationValidUntil: OrderDirection
}

input CarUpdateInput {
  name: String
  model: String
  year: Int
  price: Int
  color: String
  bodyType: String
  engineType: String
  horsepower: Int
  torque: Int
  topSpeed: Int
  acceleration: String
  transmission: String
  drivetrain: String
  fuelCapacity: Float
  fuelEconomyCity: Float
  fuelEconomyHighway: Float
  fuelEconomyCombined: Float
  emissionsRating: String
  airbags: Int
  abs: Boolean
  tractionControl: Boolean
  laneAssist: Boolean
  adaptiveCruiseControl: Boolean
  blindSpotMonitor: Boolean
  rearViewCamera: Boolean
  parkingSensors: Boolean
  autonomousDrivingLevel: String
  seats: Int
  seatMaterial: String
  heatedSeats: Boolean
  ventilatedSeats: Boolean
  sunroof: Boolean
  climateControl: String
  infotainmentSystem: String
  touchscreenSize: Float
  wirelessCharging: Boolean
  appleCarPlay: Boolean
  androidAuto: Boolean
  wheels: String
  wheelSize: Float
  ledHeadlights: Boolean
  fogLights: Boolean
  tintedWindows: Boolean
  cargoCapacity: Float
  towingCapacity: Float
  roofRack: Boolean
  trailerHitch: Boolean
  bluetooth: Boolean
  wifiHotspot: Boolean
  usbPorts: Int
  speakerSystem: String
  agency: AgencyRelateToManyForUpdateInput
  status: String
  listedDate: DateTime
  warrantyYears: Int
  images: ImageFieldInput
  videoURL: String
  insuranceStatus: String
  registrationValidUntil: DateTime
}

input AgencyRelateToManyForUpdateInput {
  disconnect: [AgencyWhereUniqueInput!]
  set: [AgencyWhereUniqueInput!]
  create: [AgencyCreateInput!]
  connect: [AgencyWhereUniqueInput!]
}

input CarUpdateArgs {
  where: CarWhereUniqueInput!
  data: CarUpdateInput!
}

input CarCreateInput {
  name: String
  model: String
  year: Int
  price: Int
  color: String
  bodyType: String
  engineType: String
  horsepower: Int
  torque: Int
  topSpeed: Int
  acceleration: String
  transmission: String
  drivetrain: String
  fuelCapacity: Float
  fuelEconomyCity: Float
  fuelEconomyHighway: Float
  fuelEconomyCombined: Float
  emissionsRating: String
  airbags: Int
  abs: Boolean
  tractionControl: Boolean
  laneAssist: Boolean
  adaptiveCruiseControl: Boolean
  blindSpotMonitor: Boolean
  rearViewCamera: Boolean
  parkingSensors: Boolean
  autonomousDrivingLevel: String
  seats: Int
  seatMaterial: String
  heatedSeats: Boolean
  ventilatedSeats: Boolean
  sunroof: Boolean
  climateControl: String
  infotainmentSystem: String
  touchscreenSize: Float
  wirelessCharging: Boolean
  appleCarPlay: Boolean
  androidAuto: Boolean
  wheels: String
  wheelSize: Float
  ledHeadlights: Boolean
  fogLights: Boolean
  tintedWindows: Boolean
  cargoCapacity: Float
  towingCapacity: Float
  roofRack: Boolean
  trailerHitch: Boolean
  bluetooth: Boolean
  wifiHotspot: Boolean
  usbPorts: Int
  speakerSystem: String
  agency: AgencyRelateToManyForCreateInput
  status: String
  listedDate: DateTime
  warrantyYears: Int
  images: ImageFieldInput
  videoURL: String
  insuranceStatus: String
  registrationValidUntil: DateTime
}

input AgencyRelateToManyForCreateInput {
  create: [AgencyCreateInput!]
  connect: [AgencyWhereUniqueInput!]
}

type Invoice {
  id: ID!
  orderId: String
  taxOnValue: String
  BaseTaxValue: String
  NetValue: String
  status: Boolean
  agency(where: AgencyWhereInput! = {}, orderBy: [AgencyOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AgencyWhereUniqueInput): [Agency!]
  agencyCount(where: AgencyWhereInput! = {}): Int
  user(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  userCount(where: UserWhereInput! = {}): Int
  car(where: CarWhereInput! = {}, orderBy: [CarOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CarWhereUniqueInput): [Car!]
  carCount(where: CarWhereInput! = {}): Int
}

input InvoiceWhereUniqueInput {
  id: ID
}

input InvoiceWhereInput {
  AND: [InvoiceWhereInput!]
  OR: [InvoiceWhereInput!]
  NOT: [InvoiceWhereInput!]
  id: IDFilter
  orderId: StringFilter
  taxOnValue: StringFilter
  BaseTaxValue: StringFilter
  NetValue: StringFilter
  status: BooleanFilter
  agency: AgencyManyRelationFilter
  user: UserManyRelationFilter
  car: CarManyRelationFilter
}

input UserManyRelationFilter {
  every: UserWhereInput
  some: UserWhereInput
  none: UserWhereInput
}

input InvoiceOrderByInput {
  id: OrderDirection
  orderId: OrderDirection
  taxOnValue: OrderDirection
  BaseTaxValue: OrderDirection
  NetValue: OrderDirection
  status: OrderDirection
}

input InvoiceUpdateInput {
  orderId: String
  taxOnValue: String
  BaseTaxValue: String
  NetValue: String
  status: Boolean
  agency: AgencyRelateToManyForUpdateInput
  user: UserRelateToManyForUpdateInput
  car: CarRelateToManyForUpdateInput
}

input UserRelateToManyForUpdateInput {
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

input InvoiceUpdateArgs {
  where: InvoiceWhereUniqueInput!
  data: InvoiceUpdateInput!
}

input InvoiceCreateInput {
  orderId: String
  taxOnValue: String
  BaseTaxValue: String
  NetValue: String
  status: Boolean
  agency: AgencyRelateToManyForCreateInput
  user: UserRelateToManyForCreateInput
  car: CarRelateToManyForCreateInput
}

input UserRelateToManyForCreateInput {
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createUser(data: UserCreateInput!): User
  createUsers(data: [UserCreateInput!]!): [User]
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User
  updateUsers(data: [UserUpdateArgs!]!): [User]
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUsers(where: [UserWhereUniqueInput!]!): [User]
  createAgency(data: AgencyCreateInput!): Agency
  createAgencies(data: [AgencyCreateInput!]!): [Agency]
  updateAgency(where: AgencyWhereUniqueInput!, data: AgencyUpdateInput!): Agency
  updateAgencies(data: [AgencyUpdateArgs!]!): [Agency]
  deleteAgency(where: AgencyWhereUniqueInput!): Agency
  deleteAgencies(where: [AgencyWhereUniqueInput!]!): [Agency]
  createCar(data: CarCreateInput!): Car
  createCars(data: [CarCreateInput!]!): [Car]
  updateCar(where: CarWhereUniqueInput!, data: CarUpdateInput!): Car
  updateCars(data: [CarUpdateArgs!]!): [Car]
  deleteCar(where: CarWhereUniqueInput!): Car
  deleteCars(where: [CarWhereUniqueInput!]!): [Car]
  createInvoice(data: InvoiceCreateInput!): Invoice
  createInvoices(data: [InvoiceCreateInput!]!): [Invoice]
  updateInvoice(where: InvoiceWhereUniqueInput!, data: InvoiceUpdateInput!): Invoice
  updateInvoices(data: [InvoiceUpdateArgs!]!): [Invoice]
  deleteInvoice(where: InvoiceWhereUniqueInput!): Invoice
  deleteInvoices(where: [InvoiceWhereUniqueInput!]!): [Invoice]
  endSession: Boolean!
  authenticateUserWithPassword(email: String!, password: String!): UserAuthenticationWithPasswordResult
  createInitialUser(data: CreateInitialUserInput!): UserAuthenticationWithPasswordSuccess!
}

union UserAuthenticationWithPasswordResult = UserAuthenticationWithPasswordSuccess | UserAuthenticationWithPasswordFailure

type UserAuthenticationWithPasswordSuccess {
  sessionToken: String!
  item: User!
}

type UserAuthenticationWithPasswordFailure {
  message: String!
}

input CreateInitialUserInput {
  fullName: String
  email: String
  password: String
}

type Query {
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  usersCount(where: UserWhereInput! = {}): Int
  agency(where: AgencyWhereUniqueInput!): Agency
  agencies(where: AgencyWhereInput! = {}, orderBy: [AgencyOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AgencyWhereUniqueInput): [Agency!]
  agenciesCount(where: AgencyWhereInput! = {}): Int
  car(where: CarWhereUniqueInput!): Car
  cars(where: CarWhereInput! = {}, orderBy: [CarOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CarWhereUniqueInput): [Car!]
  carsCount(where: CarWhereInput! = {}): Int
  invoice(where: InvoiceWhereUniqueInput!): Invoice
  invoices(where: InvoiceWhereInput! = {}, orderBy: [InvoiceOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: InvoiceWhereUniqueInput): [Invoice!]
  invoicesCount(where: InvoiceWhereInput! = {}): Int
  keystone: KeystoneMeta!
  authenticatedItem: AuthenticatedItem
}

union AuthenticatedItem = User

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  groups: [KeystoneAdminUIFieldGroupMeta!]!
  graphql: KeystoneAdminUIGraphQL!
  initialColumns: [String!]!
  initialSearchFields: [String!]!
  initialSort: KeystoneAdminUISort
  isSingleton: Boolean!
  hideCreate: Boolean!
  hideDelete: Boolean!
  isHidden: Boolean!
  itemQueryName: String!
  listQueryName: String!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  isNonNull: [KeystoneAdminUIFieldMetaIsNonNull!]
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

enum KeystoneAdminUIFieldMetaIsNonNull {
  read
  create
  update
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
  fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum KeystoneAdminUIFieldMetaItemViewFieldPosition {
  form
  sidebar
}

enum QueryMode {
  default
  insensitive
}

type KeystoneAdminUIFieldGroupMeta {
  label: String!
  description: String
  fields: [KeystoneAdminUIFieldMeta!]!
}

type KeystoneAdminUIGraphQL {
  names: KeystoneAdminUIGraphQLNames!
}

type KeystoneAdminUIGraphQLNames {
  outputTypeName: String!
  whereInputName: String!
  whereUniqueInputName: String!
  createInputName: String!
  createMutationName: String!
  createManyMutationName: String!
  relateToOneForCreateInputName: String!
  relateToManyForCreateInputName: String!
  itemQueryName: String!
  listOrderName: String!
  listQueryCountName: String!
  listQueryName: String!
  updateInputName: String!
  updateMutationName: String!
  updateManyInputName: String!
  updateManyMutationName: String!
  relateToOneForUpdateInputName: String!
  relateToManyForUpdateInputName: String!
  deleteMutationName: String!
  deleteManyMutationName: String!
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
